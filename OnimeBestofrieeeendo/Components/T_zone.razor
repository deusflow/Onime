@rendermode InteractiveServer
@inject DbService DbService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@layout MyLayout
@page "/test"

<style>
    .tzone-container {
        margin: 0 !important;
        padding: 80px 0 0 0 !important;
        box-sizing: border-box;
        min-height: 100vh !important;
        overflow-x: hidden;
        overflow-y: auto;
        width: 100% !important;
    }
    
    #welcome-msg {
        display: flex !important;
        flex-direction: column !important;
        align-items: center !important;
        justify-content: center !important;
        gap: 50px !important;
        margin-top: 40px !important;
        margin-bottom: 32px !important;
    }
    
    #welcome-msg h3 {
        font-size: 2.5rem !important;
        font-weight: 600 !important;
        color: #333 !important;
    }
    
    #create-btn {
        background: #59CCCC !important;
        color: #1e1e1e !important;
        border: none !important;
        border-radius: 8px !important;
        padding: 10px 24px !important;
        font-size: 1rem !important;
        font-weight: 600 !important;
        cursor: pointer !important;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08) !important;
        transition: background 0.2s, color 0.2s;
    }
    
    #create-btn:hover {
        background: #48bbbb !important;
        color: #fff !important;
    }
    
    #prods-section {
        display: grid !important;
        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)) !important;
        gap: 24px !important;
        width: 100% !important;
        max-width: 1200px !important;
        margin: 0 auto 40px auto !important;
        background: none !important;
        padding: 0 16px !important;
    }
    
    .prod-card {
        background: #fff !important;
        border-radius: 12px !important;
        box-shadow: 0 4px 16px rgba(0,0,0,0.10) !important;
        overflow: hidden !important;
        display: flex !important;
        flex-direction: column !important;
        align-items: center !important;
        transition: transform 0.2s, box-shadow 0.2s !important;
        padding-bottom: 12px !important;
    }
    
    .prod-card:hover {
        transform: translateY(-4px) scale(1.02) !important;
        box-shadow: 0 8px 24px rgba(0,0,0,0.16) !important;
    }
    
    .img-containter {
        width: 100% !important;
        height: 300px !important;
        background: #f3f3f3 !important;
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;
        overflow: hidden !important;
    }
    
    .img-containter img {
        width: 100% !important;
        height: 100% !important;
        object-fit: contain !important;
    }
    
    .prod-info {
        padding: 12px 16px 0 16px !important;
        width: 100% !important;
        display: flex !important;
        flex-direction: column !important;
        align-items: flex-start !important;
        gap: 6px !important;
    }
    
    .prod-title {
        font-size: 1.1rem !important;
        font-weight: 600 !important;
        color: #333 !important;
        margin-bottom: 2px !important;
    }
    
    .prod-price {
        font-size: 0.95rem !important;
        color: #59CCCC !important;
        font-weight: 500 !important;
    }
    
    .prod-actions {
        display: flex !important;
        gap: 8px !important;
        margin-top: 10px !important;
        width: 100% !important;
    }
    
    .prod-actions button {
        flex: 1 !important;
        padding: 6px 0 !important;
        border-radius: 6px !important;
        border: none !important;
        font-size: 0.95rem !important;
        font-weight: 500 !important;
        cursor: pointer !important;
        transition: background 0.2s, color 0.2s !important;
    }
    
    .prod-actions button:first-child {
        background: #59CCCC !important;
        color: #1e1e1e !important;
    }
    
    .prod-actions button:first-child:hover {
        background: #48bbbb !important;
        color: #fff !important;
    }
    
    .prod-actions button:last-child {
        background: transparent !important;
        color: #59CCCC !important;
        border: 1px solid #59CCCC !important;
    }
    
    .prod-actions button:last-child:hover {
        background: #59CCCC !important;
        color: #fff !important;
    }
      #welcome-msg-tzone {
        background: linear-gradient(90deg, #ff6a00, #ee0979, #ff6a00) !important;
        background-size: 200% auto !important;
        background-clip: text !important;
        -webkit-background-clip: text !important;
        color: transparent !important;
        animation: gradientShift 3s linear infinite !important;
    }
    
    @@keyframes gradientShift {
        0% {
            background-position: 0% center;
        }
        100% {
            background-position: 200% center;
        }
    }
</style>

<main class="tzone-container">
    <div id="welcome-msg">
        <h3>Welcome to the <span id="welcome-msg-tzone">Trading Zone!!!</span></h3>
        <button id="create-btn" @onclick="() => CreateItem()">Sell your own item</button>
    </div>

    <section id="prods-section">
        @foreach (var prod in shopProducts)
        {
            <div class="prod-card">
                <div class="img-containter">
                    <img src="@prod.ImageUrl" alt="@prod.ItemName" />
                </div>
                <div class="prod-info">
                    <h3 class="prod-title">@prod.ItemName</h3>
                    <span class="prod-price">@prod.Price DKK</span>
                    <span class="prod-price">@prod.Rarity</span>
                    <div class="prod-actions">
                        <button>Add to Cart</button>
                        <button @onclick="() => GoToItem(prod.ShopItemId)">Read More</button>
                    </div>
                </div>
            </div>
        }
    </section>
</main>

@code {
    List<TradeItems> shopProducts = new List<TradeItems>();

    private async Task GetProducts()
    {

        shopProducts = await DbService.GetShopItemsAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        await GetProducts();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Force enable scroll for T-zone page
            await JS.InvokeVoidAsync("eval", @"
                document.body.style.overflow = 'auto';
                document.documentElement.style.overflow = 'auto';
                console.log('[T-zone] Scroll enabled on page load');
            ");
            
            // Also call the reinitialize function if it exists
            try 
            {
                await JS.InvokeVoidAsync("reinitializeScrollBehavior");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"[T-zone] Could not call reinitializeScrollBehavior: {ex.Message}");
            }
        }
    }
    
    void GoToItem(int id)
    {
        Navigation.NavigateTo($"/details?Id={id}");
    }

    private void CreateItem() {
        Navigation.NavigateTo("/create");
    }
}
