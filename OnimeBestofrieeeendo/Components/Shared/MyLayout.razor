@using Microsoft.JSInterop
@inherits Microsoft.AspNetCore.Components.LayoutComponentBase
@inject IJSRuntime JS
@inject NavigationManager Navigation

<PageTitle>Trading Zone</PageTitle>

<div class="my-layout">
    @* Add inline styles to ensure they load *@
    <style>
        .my-layout {
            min-height: 100vh !important;
            background: linear-gradient( 160deg, #fdfbfb 0%, #f1f3f6 30%, #e4ebf1 60%, #f8f9fb 85%, #fefefe 100% ) !important;
            position: relative;
            z-index: 0;
            font-family: 'Segoe UI', Arial, sans-serif !important;
            color: #222 !important;
        }
        
        .my-layout .nav-container,
        .my-layout .nav-button-base,
        .my-layout .nav-button-base-contact,
        .my-layout .nav-button-standard,
        .my-layout .nav-button-home,
        .my-layout .nav-button-shop,
        .my-layout .nav-button-zone,
        .my-layout .nav-button-profile,
        .my-layout .nav-button-base-shop,
        .my-layout .floating-particles {
            display: none !important;
            visibility: hidden !important;
        }
        
        .my-layout #navbar {
            display: flex !important;
            background-color: lightpink !important;
            top: 0;
            left: 0;
            flex-direction: row;
            height: 60px;
            position: fixed;
            width: 100%;
            justify-content: flex-start;
            align-items: center;
            z-index: 10;
            border-bottom: 2px solid #e0b0b0;
            padding: 0 32px;
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;
        }
        
        .my-layout #navbar a {
            font-size: 1rem !important;
            font-weight: 500 !important;
            color: #333 !important;
            cursor: pointer;
            transition: color 0.2s;
            text-decoration: none;
        }
        
        .my-layout #navbar a:hover {
            color: #59CCCC !important;
        }
        
        .my-layout #nav-list {
            list-style: none !important;
            display: flex !important;
            gap: 70px;
            align-items: center;
            width: 100%;
            justify-content: flex-start;
        }
        
        .my-layout .kanji-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 0;
            overflow: hidden;
            pointer-events: none;
        }
        
        .my-layout .kanji-bg {
            position: absolute;
            font-family: 'Yu Mincho', 'Meiryo', 'Segoe UI', serif;
            font-weight: bold;
            white-space: nowrap;
            opacity: 0.35;
            user-select: none;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.08);
            animation: fadeIn 2s ease-in-out both;
        }
        
        .my-layout .kanji-bg.k1 {
            top: 5vh;
            left: 8vw;
            font-size: 7rem;
            color: #d6727d;
            transform: rotate(-12deg);
        }
        
        .my-layout .kanji-bg.k2 {
            top: 15vh;
            right: 8vw;
            font-size: 6.5rem;
            color: #7b9acc;
            transform: rotate(10deg);
        }
        
        .my-layout .kanji-bg.k3 {
            top: 30vh;
            left: 6vw;
            font-size: 5rem;
            color: #a07cc4;
            transform: rotate(-8deg);
        }
        
        .my-layout .kanji-bg.k4 {
            top: 35vh;
            right: 10vw;
            font-size: 5.5rem;
            color: #70a89f;
            transform: rotate(14deg);
        }
        
        .my-layout .kanji-bg.k5 {
            top: 50vh;
            left: 20vw;
            font-size: 4.5rem;
            color: #e8909c;
            transform: rotate(-18deg);
        }
        
        .my-layout .kanji-bg.k6 {
            top: 58vh;
            right: 18vw;
            font-size: 5rem;
            color: #f7b85c;
            transform: rotate(16deg);
        }
        
        .my-layout .kanji-bg.k7 {
            top: 68vh;
            left: 12vw;
            font-size: 5.2rem;
            color: #c3a5e5;
            transform: rotate(6deg);
        }
        
        .my-layout .kanji-bg.k8 {
            top: 75vh;
            right: 10vw;
            font-size: 6rem;
            color: #f8a6a0;
            transform: rotate(-14deg);
        }
        
        .my-layout .kanji-bg.k9 {
            top: 85vh;
            left: 28vw;
            font-size: 4.8rem;
            color: #7cb9e8;
            transform: rotate(12deg);
        }
        
        @@keyframes fadeIn {
            0% {
                opacity: 0;
                transform: scale(0.8);
            }
            100% {
                opacity: 0.35;
                transform: scale(1);
            }
        }
    </style>
    
    @* TODO: Add current balance to the nav menu (on the right side preferrably) *@
    <nav id="navbar">
        <ul id="nav-list">
            <li class="nav-option">
                <a href="/" @onclick="@(_ => Navigation.NavigateTo("/"))">Home Page</a>
            </li>

            @if (currentPath != "/test")
            {
                <li class="nav-option">
                    <a href="/test" @onclick="GoBack">Go back</a>
                </li>
            }
        </ul>
    </nav>
    <div class="kanji-container">
        <span class="kanji-bg k1">友達</span>
        <span class="kanji-bg k2">交換</span>
        <span class="kanji-bg k3">夢</span>
        <span class="kanji-bg k4">心</span>
        <span class="kanji-bg k5">力</span>
        <span class="kanji-bg k6">光</span>
        <span class="kanji-bg k7">風</span>
        <span class="kanji-bg k8">花</span>
        <span class="kanji-bg k9">月</span>
    </div>

    <main>
        @Body
    </main>

</div>

@code {
    
    private string currentPath => "/" + Navigation.ToBaseRelativePath(Navigation.Uri).ToLower();
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("document.body.classList.add", "ready");
            // Reinitialize scroll behavior for Trading Zone pages
            await JS.InvokeVoidAsync("reinitializeScrollBehavior");
        }
    }

    private void GoBack()
    {

        Navigation.NavigateTo("/test");
    }
}